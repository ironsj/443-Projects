
@model OnlineShopping.Models.Order

@{
    ViewData["Title"] = "Orders Create";
}

<h1>Create New Order</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CartID" class="control-label">Shopper:  @ViewBag.ShopperEmail</label>
            </div>
            <div class="form-group">
                <label asp-for="CartID" class="control-label">CartID:  @ViewBag.CartID</label>
                <input asp-for="CartID" type="hidden" name="CartID" value=@ViewBag.CartID />
            </div>
            <div class="form-group">
                <label asp-for="ProductID" class="control-label"> @ViewBag.ProductName</label>
                <label asp-for="ProductID" class="control-label"> (ProductID = @ViewBag.ProductID)</label>
                <input asp-for="ProductID" type="hidden" name="ProductID" value=@ViewBag.ProductID />
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label">Quantity to add to the cart:</label>
                <label asp-for="Quantity" class="control-label">( @ViewBag.ProductAvailable  Available )</label>
                <input asp-for="Quantity" class="form-control" value=1 />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
