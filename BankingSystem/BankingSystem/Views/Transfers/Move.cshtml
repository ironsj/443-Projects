
@model BankingSystem.Models.Transfer

@{
    ViewData["Title"] = "Move";
}

<h1>Move</h1>

<h4>Transfer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Move">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*ViewData["CustomerId"] = account.CustomerID;*@
            <div class="form-group">
                <label asp-for="AccountID" class="control-label">AccountID:  @ViewBag.AccountID</label>
                <input asp-for="AccountID" type="hidden" name="AccountID" value=@ViewBag.AccountID />
            </div>
            <div class="form-group">
                <label asp-for="AccountID" class="control-label">Balance:  @ViewData["Balance"]</label>
                <input asp-for="AccountID" type="hidden" name="AccountID" value=@ViewBag.AccountID />
            </div>
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ToAccountID" class="control-label"></label>
                <select asp-for="ToAccountID" class="form-control" asp-items=@ViewBag.MyAccounts></select>
            </div>
            <div class=" form-group">
                <input type="submit" value="Move" class="btn btn-primary" />
            </div>
        </form>
</div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
